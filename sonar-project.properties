# ─────────────────────────────────────────────────────────────
# Project identity
sonar.projectKey=Learnathon-By-Geeky-Solutions_bladerunners
sonar.organization=learnathon-by-geeky-solutions
sonar.projectName=bladerunners
sonar.projectVersion=1.0

# ─────────────────────────────────────────────────────────────
# ONLY scan the PHP backend
sonar.sources=backend

# ─────────────────────────────────────────────────────────────
# Exclude migrations, public index and ALL CSS/SCSS from *analysis*
sonar.exclusions=\
  backend/database/migrations/**,\
  backend/public/index.php,\
  **/*.css,\
  **/*.scss

# (Optional) also keep CSS/SCSS out of coverage metrics
sonar.coverage.exclusions=\
  **/*.css,\
  **/*.scss

# ─────────────────────────────────────────────────────────────
# Mute precisely the “at‑rule should be valid” check (css:S4662)
# on any .css file—no more @custom-variant/@theme errors
sonar.issue.ignore.multicriteria=1
sonar.issue.ignore.multicriteria.1.ruleKey=css:S4662
sonar.issue.ignore.multicriteria.1.resourceKey=**/*.css

# ─────────────────────────────────────────────────────────────
# Prevent Sonar’s CSS sensor from ever picking up CSS files
# (alternative safety net—if the above still somehow misses)
sonar.css.file.suffixes=

# ─────────────────────────────────────────────────────────────
# Force the scanner to clear its local cache on each run.
# Note: some versions of the CLI only honour this when passed as -D
sonar.scanner.clean=true
