# ─────────────────────────────────────────────────────────────
# 1) Project identification
sonar.projectKey=Learnathon-By-Geeky-Solutions_bladerunners
sonar.organization=learnathon-by-geeky-solutions
sonar.projectName=bladerunners
sonar.projectVersion=1.0

# ─────────────────────────────────────────────────────────────
# 2) Only analyze backend/
sonar.sources=backend

# ─────────────────────────────────────────────────────────────
# 3) Exclude migrations, public index and ALL CSS/SCSS from *analysis*
sonar.exclusions=backend/database/migrations/**,backend/public/index.php,**/*.css,**/*.scss

# 4) (Optional) also keep CSS/SCSS out of coverage metrics
sonar.coverage.exclusions=**/*.css,**/*.scss

# ─────────────────────────────────────────────────────────────
# 5) Extra safety‐net: tell Sonar’s CSS sensor to ignore ALL CSS files
#    (so even if exclusions slip, the sensor never picks them up)
sonar.css.file.suffixes=

# ─────────────────────────────────────────────────────────────
# 6) In case any .css did slip through, silence the one rule that flags
#    @custom-variant/@theme (css:S4662 “unknown at‑rule”) on all .css
sonar.issue.ignore.multicriteria=1
sonar.issue.ignore.multicriteria.1.ruleKey=css:S4662
sonar.issue.ignore.multicriteria.1.resourceKey=**/*.css

# ─────────────────────────────────────────────────────────────
# 7) Force the scanner to clear its local cache on each run,
#    guaranteeing your new settings are applied immediately
sonar.scanner.clean=true
